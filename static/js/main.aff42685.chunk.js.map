{"version":3,"sources":["../gmk_images sync nonrecursive /.[^/.]+$","../gmk_images/8008.jpeg","../gmk_images/9009.jpeg","../gmk_images/cafe.jpg","../gmk_images/camping.jpeg","../gmk_images/laser.png","../gmk_images/mizu.png","../gmk_images/oblivion.png","../gmk_images/olivia.png","../gmk_images/wob.jpg","loadImages.js","firebase.js","Home.js","thinking.png","Product.js","NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","images","r","forEach","item","replace","importAll","require","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","enablePersistence","catch","err","console","error","HomePage","useState","topGMK","setTopGMK","useEffect","top","collection","orderBy","limitToLast","get","then","querySnapshot","doc","push","reverse","className","style","padding","margin","product","split","to","src","default","alt","charAt","toUpperCase","slice","href","whiteSpace","SETS","MONTHS","START_DATE","END_DATE","START_DATE_DT","Date","END_DATE_DT","sortObjectByKey","obj","key","asc","sort","a","b","datePrettyFormat","ts","d","getMonth","getFullYear","NoDataPage","props","sets","setSets","setNames","results","Fuse","includeScore","threshold","search","data","productID","newSets","result","added","length","fontSize","s","thinkingEmote","fontWeight","Product","useParams","toLowerCase","isMount","isMountRef","useRef","current","useIsMount","gmkID","setProduct","average","setAverage","start","end","dataShowParams","setDataShowParams","setsShow","setSetsShow","currentSort","setCurrentSort","clickLeft","setClickLeft","clickRight","setClickRight","graphLeft","setGraphLeft","graphRight","setGraphRight","tableHeader","field","onClick","sumByMonth","year","month","allData","newData","dateConvert","date","toDate","category","price","linkFull","link","join","averageByMonth","keyMonth","y","m","monthAverage","getTime","monthData","keyCategory","categoryData","isNaN","Math","round","LineChart","width","height","payload","target","baseVal","onMouseDown","activeLabel","onMouseMove","onMouseUp","refLeft","refRight","endD","setMonth","zoom","CartesianGrid","strokeDasharray","XAxis","dataKey","type","scale","left","right","interval","angle","tickMargin","domain","allowDataOverflow","tickFormatter","YAxis","label","value","position","Tooltip","labelFormatter","formatter","name","Legend","Line","stroke","activeDot","ReferenceArea","x1","x2","strokeOpacity","box","setName","Fragment","htmlFor","checked","includes","onChange","currentTarget","filter","marginLeft","p","rel","toString","ProductPage","useRouteMatch","path","url","exact","Search","Input","SearchBar","history","useHistory","placeholder","onSearch","NavBar","App","state","Home","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aff42685.chunk.js","sourcesContent":["var map = {\n\t\"./8008.jpeg\": 232,\n\t\"./9009.jpeg\": 233,\n\t\"./cafe.jpg\": 234,\n\t\"./camping.jpeg\": 235,\n\t\"./laser.png\": 236,\n\t\"./mizu.png\": 237,\n\t\"./oblivion.png\": 238,\n\t\"./olivia.png\": 239,\n\t\"./wob.jpg\": 240\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 231;","export default __webpack_public_path__ + \"static/media/8008.c8e1e650.jpeg\";","export default __webpack_public_path__ + \"static/media/9009.e9d053b1.jpeg\";","export default __webpack_public_path__ + \"static/media/cafe.bdac71c0.jpg\";","export default __webpack_public_path__ + \"static/media/camping.9b098e2a.jpeg\";","export default __webpack_public_path__ + \"static/media/laser.aff55880.png\";","export default __webpack_public_path__ + \"static/media/mizu.eb4bc4b3.png\";","export default __webpack_public_path__ + \"static/media/oblivion.04bfe77a.png\";","export default __webpack_public_path__ + \"static/media/olivia.87bda4e2.png\";","export default __webpack_public_path__ + \"static/media/wob.6618efec.jpg\";","function importAll(r) {\r\n    let images = {};\r\n    r.keys().forEach((item) => { images[item.replace('./', '').replace(/\\.[^/.]+$/, \"\")] = r(item); });\r\n    return images;\r\n}\r\n\r\nconst images = importAll(require.context('../gmk_images', false, /\\.[^/.]+$/));\r\n\r\nexport default images;","import firebase from 'firebase'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAcBmvPhJ0uJjEyeTZRiGC_fsTF8GDCRSA\",\r\n    authDomain: \"mm-tracker-760cf.firebaseapp.com\",\r\n    projectId: \"mm-tracker-760cf\",\r\n    storageBucket: \"mm-tracker-760cf.appspot.com\",\r\n    messagingSenderId: \"692582051190\",\r\n    appId: \"1:692582051190:web:0d71918a4278a62657de57\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\ndb.enablePersistence()\r\n    .catch((err) => {\r\n        console.error(err)\r\n    });\r\n\r\n\r\nexport default db;","import { Link } from \"react-router-dom\";\r\nimport images from \"./loadImages\";\r\nimport db from \"./firebase\";\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction HomePage() {\r\n    const [topGMK, setTopGMK] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let top = [];\r\n        db.collection(\"gmk\").orderBy('count').limitToLast(8).get().then(querySnapshot => {\r\n            querySnapshot.forEach(doc => {\r\n                top.push(doc.id);\r\n            })\r\n            setTopGMK(top.reverse());\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <div className='home-page'>\r\n            <div className=\"graph\" style={{ padding: 10 }}>\r\n                <p className=\"section-header\" style={{ margin: 0 }} >Popular Sets</p>\r\n            </div>\r\n            <div className='top-images'>\r\n                {topGMK.map((id) => {\r\n                    let product = id.split(\" \")[1];\r\n                    return (\r\n                        <Link to={'/products/' + product + '/'} key={id}>\r\n                            <div className=\"square\" >\r\n                                <div className=\"content\">\r\n                                    <div className=\"table\">\r\n                                        <div className=\"table-cell\">\r\n                                            <img className=\"rs\" src={images[product].default} alt={id} />\r\n                                            <p className=\"home-gmk\"> GMK {product.charAt(0).toUpperCase() + product.slice(1)} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                })\r\n                }\r\n            </div>\r\n            <div className='info'>\r\n                <dl>\r\n                    <dt className=\"section-header\">Website Information & FAQ</dt>\r\n                    <dd>This project was created by Aaryan Agrawal and Daniel Li, with help from Wesley Liu. The source code is available at <a href=\"https://github.com/13Ducks/GMKPriceTracker\" style={{ whiteSpace: \"nowrap\" }}>https://github.com/13Ducks/GMKPriceTracker</a>.</dd>\r\n                    <dt>How was the data collected?</dt>\r\n                    <dd>All posts that seemed to be selling GMK keycaps on <a href=\"https://www.reddit.com/r/mechmarket/\">r/mechmarket</a> were scraped and parsed to try to identify the product and the price it was sold at.</dd>\r\n                    <dt>Why are some of the prices/products incorrect?</dt>\r\n                    <dd>Parsing real text is hard. Many situations are impossible to parse algorithmically leading to incorrect data, but we have tried to minimize errors through post-parsing statistics and other measures.</dd>\r\n                    <dt>Why are the set names only one word?</dt>\r\n                    <dd>Due to the nature of our parsing algorithm, the only way we could get GMK set names without a premade list is by using the first word of a set name.</dd>\r\n                    <dt>What technology does this project use?</dt>\r\n                    <dd>\r\n                        <ul>\r\n                            <li>Scraping: <a href=\"https://pypi.org/project/psaw/\">PSAW</a></li>\r\n                            <li>Parsing: <a href=\"https://www.python.org/\">Python</a>, <a href=\"https://pypi.org/project/pandas/\">Pandas</a></li>\r\n                            <li>Database: <a href=\"https://firebase.google.com/\">Firebase</a></li>\r\n                            <li>Website: <a href=\"https://reactjs.org/\">React</a>, <a href=\"https://recharts.org/\">Recharts</a>, <a href=\"https://reactrouter.com/\">React Router</a>, <a href=\"https://ant.design/\">Ant Design</a>, <a href=\"https://fusejs.io/\">Fuse.js</a></li>\r\n                        </ul>\r\n                    </dd>\r\n                    <dt>What GMK sets do you own?</dt>\r\n                    <dd>At the moment, Cafe, Darling, and Peaches n Cream.</dd>\r\n                </dl>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default HomePage;","export default __webpack_public_path__ + \"static/media/thinking.955ba4dc.png\";","import React, { useEffect, useState, useRef } from 'react';\r\n\r\nimport {\r\n    Link,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n    useRouteMatch,\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nimport {\r\n    LineChart,\r\n    Line,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend,\r\n    ReferenceArea,\r\n} from \"recharts\";\r\n\r\nimport Fuse from \"fuse.js\";\r\n\r\nimport db from './firebase.js';\r\nimport thinkingEmote from './thinking.png'\r\n\r\nconst SETS = [\"base\", \"bundle\", \"single\", \"other\"];\r\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\nconst START_DATE = [2020, 1];\r\nconst END_DATE = [2021, 4];\r\nconst START_DATE_DT = new Date(START_DATE[0], START_DATE[1] - 1, 1, 0, 0, 0, 0);\r\nconst END_DATE_DT = new Date(END_DATE[0], END_DATE[1] - 1, 1, 0, 0, 0, 0);\r\n\r\nfunction sortObjectByKey(obj, key, asc) {\r\n    if (asc)\r\n        return obj.sort((a, b) => a[key] < b[key] ? -1 : a[key] > b[key] ? 1 : 0)\r\n    else\r\n        return obj.sort((a, b) => b[key] < a[key] ? -1 : b[key] > a[key] ? 1 : 0)\r\n}\r\n\r\nfunction datePrettyFormat(ts) {\r\n    let d = new Date(ts);\r\n    return MONTHS[d.getMonth()] + \" \" + d.getFullYear()\r\n}\r\n\r\nfunction ProductPage() {\r\n    const { path, url } = useRouteMatch();\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={path}>\r\n                    <Redirect to={\"/\"} />\r\n                </Route>\r\n                <Route path={`${path}/:productID`}>\r\n                    <Product />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useIsMount = () => {\r\n    const isMountRef = useRef(true);\r\n    useEffect(() => {\r\n        isMountRef.current = false;\r\n    }, []);\r\n    return isMountRef.current;\r\n};\r\n\r\nfunction NoDataPage(props) {\r\n    const [sets, setSets] = useState([\"not mounted\"]);\r\n\r\n    useEffect(() => {\r\n        let setNames = [];\r\n        db.collection(\"gmk\").get().then(querySnapshot => {\r\n            querySnapshot.forEach(doc => {\r\n                setNames.push(doc.id);\r\n            })\r\n\r\n            const fuse = new Fuse(setNames, { includeScore: true, threshold: 0.3 });\r\n            let results = fuse.search(props.data.productID);\r\n\r\n            let newSets = [];\r\n            results.forEach(result => {\r\n                let split = result.item.split(\" \")[1];\r\n                if (split) {\r\n                    newSets.push(split);\r\n                }\r\n            })\r\n\r\n            setSets(newSets.slice(0, 10));\r\n        })\r\n    }, [props.data.productID]);\r\n\r\n    let id = props.data.productID\r\n\r\n    let added = [];\r\n\r\n    if (sets.length === 0) {\r\n        added.push(<p style={{ fontSize: 20 }} key=\"none\">No similarly named sets were found.</p>);\r\n    } else if (sets[0] !== \"not mounted\") {\r\n        added.push(<p style={{ fontSize: 20 }} key=\"meant\">Did you mean one of the following?</p>);\r\n        sets.forEach((s) => {\r\n            added.push(\r\n                <Link to={'/products/' + s + '/'} key={s}>\r\n                    <p style={{ fontSize: 20, margin: 0 }}>GMK {s.charAt(0).toUpperCase() + s.slice(1)}</p>\r\n                </Link>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (<div className=\"graph\" style={{ padding: 20 }}>\r\n        <img src={thinkingEmote} alt=\"thinking emote\" style={{ padding: 20 }} />\r\n        <p style={{ margin: 0, fontSize: 20 }}>No data was found for for <span style={{ fontWeight: \"bold\" }}> GMK {id.charAt(0).toUpperCase() + id.slice(1)}</span></p>\r\n        {added}\r\n    </div>)\r\n}\r\n\r\nfunction Product() {\r\n    let { productID } = useParams();\r\n    productID = productID.toLowerCase();\r\n\r\n    if (productID.split(\" \")[0] === \"gmk\") {\r\n        productID = productID.split(\" \")[1];\r\n    }\r\n\r\n    if (productID.split(\" \").length > 1) {\r\n        productID = productID.split(\" \")[0];\r\n    }\r\n\r\n    const isMount = useIsMount();\r\n\r\n    const gmkID = \"gmk \" + productID\r\n    const [product, setProduct] = useState([]);\r\n    const [average, setAverage] = useState([]);\r\n    const [dataShowParams, setDataShowParams] = useState({ start: START_DATE_DT, end: END_DATE_DT });\r\n    const [setsShow, setSetsShow] = useState([...SETS]);\r\n    const [currentSort, setCurrentSort] = useState(['date', true]);\r\n    const [clickLeft, setClickLeft] = useState(\"\");\r\n    const [clickRight, setClickRight] = useState(\"\");\r\n    const [graphLeft, setGraphLeft] = useState(START_DATE_DT);\r\n    const [graphRight, setGraphRight] = useState(END_DATE_DT);\r\n\r\n    function buttonSetInclude(setName) {\r\n        return (\r\n            <React.Fragment key={setName}>\r\n                <label className=\"includeSetBox\" htmlFor={`chk${setName}`}>{setName}</label>\r\n                <input\r\n                    id={`chk${setName.name}`}\r\n                    type=\"checkbox\"\r\n                    checked={setsShow.includes(setName)}\r\n                    onChange={(e) => {\r\n                        if (e.currentTarget.checked) {\r\n                            setSetsShow([...setsShow, setName]);\r\n                        } else {\r\n                            setSetsShow(setsShow.filter((name) => name !== setName));\r\n                        }\r\n                    }}\r\n                    style={{ marginLeft: \"3px\" }}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    function tableHeader(field) {\r\n        return (\r\n            <th onClick={() => {\r\n                if (currentSort[0] === field) {\r\n                    setProduct(sortObjectByKey(product.slice(), field, !currentSort[1]))\r\n                    setCurrentSort([field, !currentSort[1]])\r\n                } else {\r\n                    setCurrentSort([field, true])\r\n                    setProduct(sortObjectByKey(product.slice(), field, true))\r\n                }\r\n\r\n            }}>{field + \"  \" + (currentSort[0] === field ? currentSort[1] ? \"▲\" : \"▼\" : \"⇕\")}</th>\r\n        )\r\n    }\r\n\r\n    function zoom() {\r\n        let refLeft = clickLeft\r\n        let refRight = clickRight\r\n\r\n        if (refLeft === refRight || refRight === \"\") {\r\n            setClickLeft(\"\");\r\n            setClickRight(\"\");\r\n\r\n            if (refLeft !== \"\") {\r\n                let endD = new Date(refLeft);\r\n                endD.setMonth(endD.getMonth() + 1);\r\n                setDataShowParams({ start: refLeft, end: endD });\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (refLeft > refRight) [refLeft, refRight] = [refRight, refLeft];\r\n\r\n        let endD = new Date(refRight);\r\n        endD.setMonth(endD.getMonth() + 1);\r\n\r\n        setGraphLeft(refLeft);\r\n        setGraphRight(refRight);\r\n        setClickLeft(\"\");\r\n        setClickRight(\"\");\r\n\r\n        setDataShowParams({ start: refLeft, end: endD });\r\n        return;\r\n    }\r\n\r\n    useEffect(() => {\r\n        db.collection(\"gmk\").doc(gmkID).collection('sales').orderBy('date').get().then(querySnapshot => {\r\n            let sumByMonth = {};\r\n            for (let year = START_DATE[0]; year <= END_DATE[0]; year++) {\r\n                for (let month = 1; month <= 12; month++) {\r\n                    if (year === START_DATE[0] && month < START_DATE[1]) continue;\r\n                    if (year === END_DATE[0] && month > END_DATE[1]) continue;\r\n\r\n                    // sum, quantity\r\n                    sumByMonth[[year, month]] = { \"base\": [0, 0], \"bundle\": [0, 0], \"single\": [0, 0], \"other\": [0, 0] };\r\n                }\r\n            }\r\n\r\n            let allData = [];\r\n\r\n            querySnapshot.forEach(doc => {\r\n                let newData = doc.data();\r\n                let dateConvert = newData.date.toDate();\r\n                let key = [dateConvert.getFullYear(), dateConvert.getMonth() + 1];\r\n                allData.push({\r\n                    id: doc.id,\r\n                    category: newData.category,\r\n                    price: newData.price,\r\n                    linkFull: newData.link,\r\n                    link: newData.link.split(\"/\").slice(-2),\r\n                    date: dateConvert,\r\n                    sets: newData.sets.join(\", \"),\r\n                })\r\n\r\n                sumByMonth[key][newData.category][0] += newData.price;\r\n                sumByMonth[key][newData.category][1]++;\r\n            })\r\n\r\n            let averageByMonth = [];\r\n            for (let keyMonth in sumByMonth) {\r\n                let [y, m] = keyMonth.split(\",\");\r\n                let monthAverage = { \"epoch\": new Date(y, m - 1, 1, 0, 0, 0, 0).getTime() };\r\n                let monthData = sumByMonth[keyMonth];\r\n\r\n                for (let keyCategory in monthData) {\r\n                    let categoryData = monthData[keyCategory];\r\n                    let a = categoryData[0] / categoryData[1];\r\n                    if (!isNaN(a)) {\r\n                        monthAverage[keyCategory] = Math.round(a);\r\n                        monthAverage[keyCategory + \"_q\"] = categoryData[1];\r\n                    }\r\n                }\r\n\r\n                averageByMonth.push(monthAverage)\r\n            }\r\n\r\n            setProduct(allData);\r\n            setAverage(averageByMonth);\r\n        })\r\n    }, [gmkID]);\r\n\r\n    if (isMount) {\r\n        return null;\r\n    }\r\n\r\n    if (product.length === 0) {\r\n        return <NoDataPage data={{ productID: productID }} />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"graph\">\r\n                <p style={{ padding: 20, margin: 0, fontSize: 20 }}>Showing results for <span style={{ fontWeight: \"bold\" }}> GMK {productID.charAt(0).toUpperCase() + productID.slice(1)}</span></p>\r\n\r\n                <LineChart\r\n                    width={800}\r\n                    height={400}\r\n                    data={average}\r\n                    onClick={(e, payload) => {\r\n                        if (e !== null && payload.target.className.baseVal !== \"recharts-dot\") {\r\n                            setSetsShow([...SETS]);\r\n                        }\r\n                    }}\r\n                    onMouseDown={(e) => { if (e !== null) setClickLeft(e.activeLabel) }}\r\n                    onMouseMove={(e) => { if (e !== null) clickLeft && setClickRight(e.activeLabel) }}\r\n                    onMouseUp={() => zoom()}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"epoch\" type=\"number\" scale=\"time\" padding={{ left: 25, right: 25 }} interval={0} angle={30} tickMargin={15} height={50} domain={[graphLeft, graphRight]} allowDataOverflow tickFormatter={datePrettyFormat} />\r\n                    <YAxis label={{ value: 'Price (USD)', angle: -90, position: 'insideLeft' }} />\r\n                    <Tooltip labelFormatter={datePrettyFormat} formatter={(value, name, props) => {\r\n                        return `$${props.payload[props.dataKey]}, ${props.payload[props.dataKey + \"_q\"]} units`\r\n                    }} />\r\n                    <Legend />\r\n                    <Line type=\"linear\" dataKey=\"base\" stroke=\"#4053d3\" activeDot={{ onClick: (e, payload) => setSetsShow([payload.dataKey]) }} />\r\n                    <Line type=\"linear\" dataKey=\"bundle\" stroke=\"#b51d14\" activeDot={{ onClick: (e, payload) => setSetsShow([payload.dataKey]) }} />\r\n                    <Line type=\"linear\" dataKey=\"single\" stroke=\"#00b25d\" activeDot={{ onClick: (e, payload) => setSetsShow([payload.dataKey]) }} />\r\n                    <Line type=\"linear\" dataKey=\"other\" stroke=\"#00beff\" activeDot={{ onClick: (e, payload) => setSetsShow([payload.dataKey]) }} />\r\n                    {clickLeft && clickRight ? (\r\n                        <ReferenceArea x1={clickLeft} x2={clickRight} strokeOpacity={0.3} />\r\n                    ) : null}\r\n                </LineChart>\r\n            </div>\r\n\r\n            <button className=\"resetSetButton\" onClick={() => {\r\n                setDataShowParams({ start: START_DATE_DT, end: END_DATE_DT })\r\n                setSetsShow([...SETS]);\r\n                setGraphLeft(START_DATE_DT);\r\n                setGraphRight(END_DATE_DT);\r\n            }}>\r\n                Reset\r\n            </button>\r\n\r\n            {SETS.map((box) => { return buttonSetInclude(box) })}\r\n\r\n\r\n\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {tableHeader(\"category\")}\r\n                        {tableHeader(\"price\")}\r\n                        {tableHeader(\"link\")}\r\n                        {tableHeader(\"date\")}\r\n                        {tableHeader(\"sets\")}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {product.map((p) => {\r\n                        if (p.date >= dataShowParams.start && p.date <= dataShowParams.end && setsShow.includes(p.category)) {\r\n                            return (\r\n                                <tr key={p.id}>\r\n                                    <td>{p.category}</td>\r\n                                    <td>{p.price}</td>\r\n                                    <td>{<a href={\"https://www.reddit.com\" + p.linkFull} target=\"_blank\" rel=\"noopener noreferrer\">{p.link}</a>}</td>\r\n                                    <td>{p.date.toString()}</td>\r\n                                    <td>{p.sets}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n\r\n                        return null\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default ProductPage;","import React from 'react';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport './App.css';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Input } from 'antd';\r\nconst { Search } = Input;\r\n\r\nfunction SearchBar() {\r\n    const history = useHistory();\r\n    const onSubmit = (value) => {\r\n        history.push(`/products/${value}`)\r\n    };\r\n\r\n    return (<Search placeholder=\"Search GMK prices\" onSearch={onSubmit} style={{ width: 250 }} />)\r\n}\r\n\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <div className='nav-bar'>\r\n            <Link to='/' className='home-button'>\r\n                GMK Price Tracker\r\n            </Link>\r\n            <SearchBar />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport HomePage from './Home.js'\r\nimport ProductPage from './Product.js';\r\nimport NavBar from './NavBar';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/products\">\r\n            <NavBar />\r\n            <ProductPage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <NavBar />\r\n            <HomePage />\r\n          </Route>\r\n        </Switch>\r\n\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}